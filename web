// Classe base Veiculo
class Veiculo {

    // Atributos privados
    private String placa;
    private String marca;
    private String modelo;
    private int ano;
    private double valor;

    // Construtor
    public Veiculo(String placa, String marca, String modelo, int ano, double valor) {
        this.placa = placa;
        this.marca = marca;
        this.modelo = modelo;
        this.ano = ano;
        this.valor = valor;
    }

    // Getters e Setters
    public String getPlaca() {
        return placa;
    }

    public void setPlaca(String placa) {
        this.placa = placa;
    }

    public String getMarca() {
        return marca;
    }

    public void setMarca(String marca) {
        this.marca = marca;
    }

    public String getModelo() {
        return modelo;
    }

    public void setModelo(String modelo) {
        this.modelo = modelo;
    }

    public int getAno() {
        return ano;
    }

    public void setAno(int ano) {
        this.ano = ano;
    }

    public double getValor() {
        return valor;
    }

    public void setValor(double valor) {
        this.valor = valor;
    }

    // Método para calcular o IPVA (4% do valor)
    public double calcularIpva() {
        return valor * 0.04;
    }

    // Método para exibir informações
    public void exibirInfo() {
        System.out.println("Placa: " + placa);
        System.out.println("Marca: " + marca);
        System.out.println("Modelo: " + modelo);
        System.out.println("Ano: " + ano);
        System.out.println(String.format("Valor: R$ %.2f", valor));
        System.out.println(String.format("IPVA: R$ %.2f", calcularIpva()));
        System.out.println("--------------------------------");
    }
}

// Classe Moto herdando de Veiculo
class Moto extends Veiculo {

    // Novo atributo
    private int cilindradas;

    // Construtor
    public Moto(String placa, String marca, String modelo, int ano, double valor, int cilindradas) {
        super(placa, marca, modelo, ano, valor);
        this.cilindradas = cilindradas;
    }

    // Getter e Setter
    public int getCilindradas() {
        return cilindradas;
    }

    public void setCilindradas(int cilindradas) {
        this.cilindradas = cilindradas;
    }

    // Sobrescrevendo calcularIpva() para 2.5%
    @Override
    public double calcularIpva() {
        return getValor() * 0.025;
    }

    // Sobrescrevendo exibirInfo()
    @Override
    public void exibirInfo() {
        System.out.println("Placa: " + getPlaca());
        System.out.println("Marca: " + getMarca());
        System.out.println("Modelo: " + getModelo());
        System.out.println("Ano: " + getAno());
        System.out.println("Cilindradas: " + cilindradas);
        System.out.println(String.format("Valor: R$ %.2f", getValor()));
        System.out.println(String.format("IPVA (2.5%%): R$ %.2f", calcularIpva()));
        System.out.println("--------------------------------");
    }
}

// Classe principal
public class Main {
    public static void main(String[] args) {

        System.out.println("==== LISTA DE MOTOS ====");

        // Criando várias motos
        Moto m1 = new Moto("ABC-1234", "Honda", "CG 160 Titan", 2022, 15000, 160);
        Moto m2 = new Moto("DEF-5678", "Yamaha", "Fazer 250", 2021, 22000, 250);
        Moto m3 = new Moto("GHI-9012", "BMW", "G 310 R", 2023, 32000, 310);
        Moto m4 = new Moto("JKL-3456", "Kawasaki", "Ninja 400", 2020, 45000, 400);
        Moto m5 = new Moto("MNO-7890", "Suzuki", "Hayabusa", 2019, 90000, 1340);

        // Exibindo todas as motos
        m1.exibirInfo();
        m2.exibirInfo();
        m3.exibirInfo();
        m4.exibirInfo();
        m5.exibirInfo();
    }
}
